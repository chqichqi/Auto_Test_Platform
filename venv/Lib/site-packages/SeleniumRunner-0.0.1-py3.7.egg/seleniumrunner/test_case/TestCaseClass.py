import pytest
from seleniumrunner.pytest_utils.DataCenter import DataCenter
from seleniumrunner.ui_framework.Executor import execute
import allure


@allure.epic('【自动化测试平台】— WEB项目自动化测试'.center(40, '*'))
@allure.suite('这是套件')
class Test_Case_Class:
    # pytest 参数化 - 由它去完成多组用例的执行
    # 启动测试之后，读取配置文件 -- 知道有多少测试用例需要执行 -- 信息保存起来
    # 基于pytest参数机制， 实现多次执行
    # ids = 每次测试的时候 编号/标题
    @allure.severity(allure.severity_level.BLOCKER)  # 阻塞级别
    @pytest.mark.parametrize("caseinfo", DataCenter.caseinfos, ids=DataCenter.ids)
    @pytest.mark.flaky(reruns=2, reruns_delay=1)  # 失败后重跑2次，每次重试前等待1秒
    def test_start(self, init_webdriver, caseinfo):
        """
        唯一的pytest测试方法 -- 利用pytest参数化机制来执行不同的用例
        """
        execute(caseinfo, init_webdriver)
