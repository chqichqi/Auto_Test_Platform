{"uid":"a9f6359cf6d269bb","name":"test_start[test_web医院端V1.3.0.0_百度搜索功能--成都.yaml]","fullName":"my_selenium_test.venv.lib.site-packages.seleniumrunner-0.0.1-py3.7.egg.seleniumrunner.test_case.TestCaseClass.Test_Case_Class#test_start","historyId":"84bf05b158534db37505f1bd017b21a0","time":{"start":1702719708190,"stop":1702719714092,"duration":5902},"description":"\n        唯一的pytest测试方法 -- 利用pytest参数化机制来执行不同的用例\n        ","descriptionHtml":"<pre><code>    唯一的pytest测试方法 -- 利用pytest参数化机制来执行不同的用例\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: //div[@id='tsn_inner']/div[2]/span[contains(text(),'百度为您找到相关结果529个')]","statusTrace":"self = <seleniumrunner.test_case.TestCaseClass.Test_Case_Class object at 0x000001B3094A9E48>, init_webdriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"45731bcc-9b26-4ca0-9a38-21876e023b0f\")>\ncaseinfo = {'context': {'case_name': '百度搜索功能--成都', 'input_value': '成都', 'search_result': '529'}, 'ddts': [], 'steps': [{'command'...果的正确性', 'target': \"//div[@id='tsn_inner']/div[2]/span[contains(text(),'百度为您找到相关结果529个')]\", 'value': '百度为您找到相关结果529个'}]}\n\n    @allure.severity(allure.severity_level.BLOCKER)  # 阻塞级别\n    @pytest.mark.parametrize(\"caseinfo\", DataCenter.caseinfos, ids=DataCenter.ids)\n    @pytest.mark.flaky(reruns=2, reruns_delay=1)  # 失败后重跑2次，每次重试前等待1秒\n    def test_start(self, init_webdriver, caseinfo):\n        \"\"\"\n        唯一的pytest测试方法 -- 利用pytest参数化机制来执行不同的用例\n        \"\"\"\n>       execute(caseinfo, init_webdriver)\n\n..\\my_selenium_test\\venv\\lib\\site-packages\\seleniumrunner-0.0.1-py3.7.egg\\seleniumrunner\\test_case\\TestCaseClass.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\my_selenium_test\\venv\\lib\\site-packages\\seleniumrunner-0.0.1-py3.7.egg\\seleniumrunner\\ui_framework\\Executor.py:42: in execute\n    value=step.get(\"value\", None))\n..\\my_selenium_test\\venv\\lib\\site-packages\\seleniumrunner-0.0.1-py3.7.egg\\seleniumrunner\\ui_framework\\UiCommand.py:128: in assert_visibility_of\n    self.wait.until(EC.visibility_of(self.driver.find_element(By.XPATH, target))), desc)\n..\\my_selenium_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:966: in find_element\n    'value': value})['value']\n..\\my_selenium_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:320: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B3091DE240>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: //div[@id=\\'tsn_inn...red/webdriver/Errors.sys.mjs:394:5\\\\nelement.find/</<@chrome://remote/content/marionette/element.sys.mjs:280:16\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: //div[@id='tsn_inner']/div[2]/span[contains(text(),'百度为您找到相关结果529个')]\n\n..\\my_selenium_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver_class","time":{"start":1702719700721,"stop":1702719708188,"duration":7467},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"pytestconfig","time":{"start":1702719700721,"stop":1702719700721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"init_webdriver","time":{"start":1702719708188,"stop":1702719708189,"duration":1},"status":"passed","steps":[{"name":"初始化selenium-webdriver...","time":{"start":1702719708188,"stop":1702719717398,"duration":9210},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":1}],"testStage":{"description":"\n        唯一的pytest测试方法 -- 利用pytest参数化机制来执行不同的用例\n        ","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: //div[@id='tsn_inner']/div[2]/span[contains(text(),'百度为您找到相关结果529个')]","statusTrace":"self = <seleniumrunner.test_case.TestCaseClass.Test_Case_Class object at 0x000001B3094A9E48>, init_webdriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"45731bcc-9b26-4ca0-9a38-21876e023b0f\")>\ncaseinfo = {'context': {'case_name': '百度搜索功能--成都', 'input_value': '成都', 'search_result': '529'}, 'ddts': [], 'steps': [{'command'...果的正确性', 'target': \"//div[@id='tsn_inner']/div[2]/span[contains(text(),'百度为您找到相关结果529个')]\", 'value': '百度为您找到相关结果529个'}]}\n\n    @allure.severity(allure.severity_level.BLOCKER)  # 阻塞级别\n    @pytest.mark.parametrize(\"caseinfo\", DataCenter.caseinfos, ids=DataCenter.ids)\n    @pytest.mark.flaky(reruns=2, reruns_delay=1)  # 失败后重跑2次，每次重试前等待1秒\n    def test_start(self, init_webdriver, caseinfo):\n        \"\"\"\n        唯一的pytest测试方法 -- 利用pytest参数化机制来执行不同的用例\n        \"\"\"\n>       execute(caseinfo, init_webdriver)\n\n..\\my_selenium_test\\venv\\lib\\site-packages\\seleniumrunner-0.0.1-py3.7.egg\\seleniumrunner\\test_case\\TestCaseClass.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\my_selenium_test\\venv\\lib\\site-packages\\seleniumrunner-0.0.1-py3.7.egg\\seleniumrunner\\ui_framework\\Executor.py:42: in execute\n    value=step.get(\"value\", None))\n..\\my_selenium_test\\venv\\lib\\site-packages\\seleniumrunner-0.0.1-py3.7.egg\\seleniumrunner\\ui_framework\\UiCommand.py:128: in assert_visibility_of\n    self.wait.until(EC.visibility_of(self.driver.find_element(By.XPATH, target))), desc)\n..\\my_selenium_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:966: in find_element\n    'value': value})['value']\n..\\my_selenium_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:320: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B3091DE240>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: //div[@id=\\'tsn_inn...red/webdriver/Errors.sys.mjs:394:5\\\\nelement.find/</<@chrome://remote/content/marionette/element.sys.mjs:280:16\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: //div[@id='tsn_inner']/div[2]/span[contains(text(),'百度为您找到相关结果529个')]\n\n..\\my_selenium_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchElementException","steps":[{"name":"打开登录首页","time":{"start":1702719708190,"stop":1702719710205,"duration":2015},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"输入搜索数据：成都","time":{"start":1702719710205,"stop":1702719711371,"duration":1166},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"点击搜索一下","time":{"start":1702719711372,"stop":1702719711821,"duration":449},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"等待：延时2秒","time":{"start":1702719711822,"stop":1702719713837,"duration":2015},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"断言搜索结果的正确性：百度为您找到相关结果529个","time":{"start":1702719713837,"stop":1702719713974,"duration":137},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: //div[@id='tsn_inner']/div[2]/span[contains(text(),'百度为您找到相关结果529个')]\n\n","statusTrace":"  File \"d:\\test-programs\\pythonspace\\my_selenium_test\\venv\\lib\\site-packages\\seleniumrunner-0.0.1-py3.7.egg\\seleniumrunner\\ui_framework\\Executor.py\", line 42, in execute\n    value=step.get(\"value\", None))\n  File \"d:\\test-programs\\pythonspace\\my_selenium_test\\venv\\lib\\site-packages\\seleniumrunner-0.0.1-py3.7.egg\\seleniumrunner\\ui_framework\\UiCommand.py\", line 128, in assert_visibility_of\n    self.wait.until(EC.visibility_of(self.driver.find_element(By.XPATH, target))), desc)\n  File \"d:\\test-programs\\pythonspace\\my_selenium_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 966, in find_element\n    'value': value})['value']\n  File \"d:\\test-programs\\pythonspace\\my_selenium_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 320, in execute\n    self.error_handler.check_response(response)\n  File \"d:\\test-programs\\pythonspace\\my_selenium_test\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0}],"attachments":[{"uid":"455bf1276743ddf0","name":"断言失败截图","source":"455bf1276743ddf0.png","type":"image/png","size":520269},{"uid":"f08dbdbef2f3549f","name":"stdout","source":"f08dbdbef2f3549f.txt","type":"text/plain","size":625}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"stepsCount":5},"afterStages":[{"name":"init_webdriver::0","time":{"start":1702719717398,"stop":1702719721827,"duration":4429},"status":"passed","steps":[{"name":"停止，并退出selenium-webdriver...","time":{"start":1702719717398,"stop":1702719721825,"duration":4427},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":1}],"labels":[{"name":"story","value":"百度搜索功能--成都"},{"name":"severity","value":"blocker"},{"name":"epic","value":"*********【自动化测试平台】— WEB项目自动化测试**********"},{"name":"suite","value":"这是套件"},{"name":"tag","value":"flaky(reruns=2, reruns_delay=1)"},{"name":"parentSuite","value":"my_selenium_test.venv.lib.site-packages.seleniumrunner-0.0.1-py3.7.egg.seleniumrunner.test_case"},{"name":"subSuite","value":"Test_Case_Class"},{"name":"host","value":"DESKTOP-3C5RDRR"},{"name":"thread","value":"55416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"my_selenium_test.venv.lib.site-packages.seleniumrunner-0.0.1-py3.7.egg.seleniumrunner.test_case.TestCaseClass"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'context': {'case_name': '百度搜索功能--成都', 'input_value': '成都', 'search_result': '529'}, 'ddts': [], 'steps': [{'command': 'open', 'desc': '打开登录首页', 'target': 'https://www.baidu.com', 'value': None}, {'command': 'send_keys', 'desc': '输入搜索数据', 'target': \"//input[@id='kw']\", 'value': '!input_value'}, {'command': 'click', 'desc': '点击搜索一下', 'target': \"//input[@id='su']\", 'value': None}, {'command': 'pause', 'desc': '等待', 'target': None, 'value': '2'}, {'command': 'assert_visibility_of', 'desc': '断言搜索结果的正确性', 'target': \"//div[@id='tsn_inner']/div[2]/span[contains(text(),'百度为您找到相关结果!search_result个')]\", 'value': '百度为您找到相关结果!search_result个'}]}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["flaky(reruns=2, reruns_delay=1)"]},"source":"a9f6359cf6d269bb.json","parameterValues":["{'context': {'case_name': '百度搜索功能--成都', 'input_value': '成都', 'search_result': '529'}, 'ddts': [], 'steps': [{'command': 'open', 'desc': '打开登录首页', 'target': 'https://www.baidu.com', 'value': None}, {'command': 'send_keys', 'desc': '输入搜索数据', 'target': \"//input[@id='kw']\", 'value': '!input_value'}, {'command': 'click', 'desc': '点击搜索一下', 'target': \"//input[@id='su']\", 'value': None}, {'command': 'pause', 'desc': '等待', 'target': None, 'value': '2'}, {'command': 'assert_visibility_of', 'desc': '断言搜索结果的正确性', 'target': \"//div[@id='tsn_inner']/div[2]/span[contains(text(),'百度为您找到相关结果!search_result个')]\", 'value': '百度为您找到相关结果!search_result个'}]}"]}